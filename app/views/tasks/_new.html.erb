<head>
<link rel="stylesheet" href="/closure-library/closure/goog/css/autocomplete.css">

   <%= javascript_include_tag 'jquery.fileupload-ui','jquery.fileupload' %>

</head>
<body>

<table class="ds_box" cellpadding="0" cellspacing="0" id="ds_conclass" style="display: none;">
<tr><td id="ds_calclass">
</td></tr>
</table>
</head>
	<div class="modal add-item-modal">
	<div class="modal-top-left"></div>
	<div class="modal-top-center">
		<a class="save-btn" id="t_add" href="#message_create" >Save</a>
		<a class="cancel-btn" id="t_can" href="#message_cancel" >Cancel</a>
		Add New Task
	</div>
	<div class="modal-top-right"></div>
	<div class="modal-body-contain">
		<div class="modal-body">
			<div class="modal-input">
<%form_for :task, :url=>({ :controller => "tasks", :action => "create" }), :html=>({:target=>"upload_frame",:multipart=>true,:id=>"taskf"}) do |f|%>
				<fieldset style="border-top:medium none;">
					<label>Name:</label>
							<%=f.text_field  'name', :class=>"textfield" %>
		    </fieldset>
			    <fieldset>
					<label>Project:</label>
		     					<% if session[:project_name] %>
					 		<%=text_field_tag  'project',session[:project_name], :class=>"textfield", :id=>"project_val" , :disabled=>true%>
							<input type="hidden" id="autocomplete1_hidden" name="project_id" value="<%=session[:project_selected]%>"/>
					 <% else %>
					 		<%=text_field_tag  'project',nil, :class=>"textfield", :id=>"project_val" %>
							<input type="hidden" id="autocomplete1_hidden" name="project_id" value=""/>
					 <% end %>
			    </fieldset>
          <fieldset>
            <label>Task List:</label>
						<%=text_field_tag  'tasklist',nil, :class=>"textfield", :id=>"t_list"  %>
						<input type="hidden" id="t_list_hidden" name="task[task_list_id]" value=""/>
					</fieldset>
					<fieldset>
            <label>Assign to:</label>
						<%=text_field_tag  'recipient',nil, :class=>"textfield", :id=>"assign_to"  %>
          </fieldset>
					<fieldset>
            <label>Notify:</label>
						<%=text_field_tag  'notify',nil, :class=>"textfield" , :id=>"notifys" %>
			    </fieldset>
					<fieldset>
					<label>Due Date:</label>
						<%=text_field_tag  'due_date',nil, :style=>"width:100px;", :class=>"textfield" , :id=>"txtInput3"%>
						<input type="hidden" id="date_hidden" name="task[due_date]" />
						<%=image_tag "/images/icons/calendar.png",:style=>"float: right; margin: 4px 15px 0pt 0pt;" ,:onclick=>'ds_sh(this);',:alt=>"Calendar"%>
							    </fieldset>
			    <fieldset id="task_txtarea">
					<label>Message:</label>
		       		<%=f.text_area 'description', :class=>'textarea', :rows=>"", :cols=>"", :display=>"none"%>
							<input type="hidden" id="attach_hidden" name="attach_id" value=""/>
			    </fieldset>
				<% end %>
				<% form_for :attachs, :url=>{:controller=>"attachments", :action=>"create"}, :html=>{:multipart=>true, :id=>"form3"} do |f3| %>
						<fieldset id="attach" class="open">
						<div id="loader1" style="display:none;">
	           <%= image_tag "spinner.gif" %>
       </div>
					<label>Attachments:</label>
					<div style="display: none; min-height: 62px;" class="attachment-upload" id="attach_upload">
						<div class="drag-drop">Drag and drop files here</div>
						<table id="files"></table>
						<div id="attachment_files"> </div>
						</div>
		        </fieldset>
					    <button id="start_uploads", style="display:none;">Start uploads</button>
		      <% end %>
			</div>
			</div>
		</div>
	</div>
	<div class="modal-bottom-left"></div>
	<div class="modal-bottom"></div>
	<div class="modal-bottom-right"></div>
<iframe id='upload_frame' name="upload_frame" style="width:0px;height:0px;border:0px;display:none" src="about:blank"></iframe>
<script type="text/javascript">
 	var attachitem=[];
	$('#task_txtarea').click(function(){
document.getElementById('task_description').style.display="block";
	document.getElementById('task_txtarea').className="open";
	});
		$('#txtInput3').keydown(function(event){
	if (event.keyCode == 9) {
  document.getElementById('task_description').style.display="block";
	document.getElementById('task_txtarea').className="open";
	$('.drag-drop').focus();
	}
	});
	$('#task_description').keydown(function(event){
	if (event.keyCode == 9) {
  document.getElementById('attach_upload').style.display="block";
	$('#task_description').focus();
	}
	});
	$('#attach').click(function(){
	document.getElementById('attach_upload').style.display="block";
	});

	$(function () {
    $('#form3').fileUploadUI({
    uploadTable: $('#files'),
    downloadTable: $('#attachment_files'),
			onProgress: function(event, files, index, xhr, handler){
		$('#loader1').show();
		},
    buildUploadRow: function (files, index) {
        return false;    },
    buildDownloadRow: function (file) {
a=file.id;
var original=file.file
var b=original.lastIndexOf('.')
var c=original.substring(b)
var d=original.split(c)[0]
if(d.length > 12)
{
   var e=d.substring(original,10)
   var file1=e.concat(c)
 }
  		 attachitem.push(a);
			 document.getElementById('attach_hidden').value=attachitem;
 	   return $('<div id="attachment_' + a + '" class="attachment">'+'<a href="javascript:delete_attachment('+a+');"> Remove </a>' +'<span class="filename">' + file.file+ '</span></div>');
    },
			onComplete:function (event, files, index, xhr, handler) {
    $('#loader1').hide();
}
});
});
function delete_attachment(file)
{
 attachitem.pop(file);
 document.getElementById('attach_hidden').value=attachitem;
 $.ajax({
      url:'/remove_attach/'+file,
      type: 'get',
			 success: function(file){
			 document.getElementById('attachment_'+file).style.display="none";
			 }
    });
}
$('#project_val').live('blur',function(event){
proj=document.getElementById("autocomplete1_hidden").value
if (document.getElementById("project_val").value!="" && proj!="")
{
 proj=document.getElementById("autocomplete1_hidden").value
 var duser=[];
 var dat=[];
$.ajax({
      url:"/tasks/"+proj+"/project_tasklists",
      type: 'get',
			 success: function(data){
			 a=data.datas.length
			 b=data.datas.length
			 $.each(data.users,function(index,value){
				duser.push({text : value.user.email,id : value.user.id})
			 });
				
			$("#assign_to").autocomplete(duser, {
  formatItem: function(item) {
    return item.text;
  },
	matchContains: true
}).result(function(event, item) {
  //document.getElementById('t_list_hidden').value=item.id;
});
			 $.each(data.datas,function(index,value){
				dat.push({text : value.task_list.name,id : value.task_list.id})
			 });
			$("#t_list").autocomplete(dat, {
  formatItem: function(items) {
    return items.text;
  },
	matchContains: true
}).result(function(event, items) {
  document.getElementById('t_list_hidden').value=items.id;
});
			 }
			 });
			 }
			});
	$('.document').ready(function(){
	var data = [<% projects.each do |project| %> {text:'<%= project.name %>', id:'<%= project.id %>'},<% end %>{text:'',id:''}];
	var data1 = [<% m_users.each do |muser| %>  {text:'<%= muser.email %>', id:'<%= muser.id %>'},<% end %>{text:'',id:''}];
$("#notifys").autocomplete(data1, {
  formatItem: function(items1) {
    return items1.text;
  },
	multiple: true,
	matchContains: true
}).result(function(event, items1) {
  //document.getElementById('autocomplete1_hidden').value=item.id;
});
$("#project_val").autocomplete(data, {
  formatItem: function(itemp) {
    return itemp.text;
  },
	matchContains: true
}).result(function(event, itemp) {
  document.getElementById('autocomplete1_hidden').value=itemp.id;
});

		<% if !session[:project_selected].nil?%>
if (document.getElementById("project_val").value!="")
{
 proj=document.getElementById("autocomplete1_hidden").value
 var duser=[];
 var dat=[];
$.ajax({
      url:"/tasks/"+proj+"/project_tasklists",
      type: 'get',
			 success: function(data){
			 a=data.datas.length
			  b=data.datas.length
			  $.each(data.users,function(index,value){
				duser.push({text : value.user.email,id : value.user.id})
			 });
			$("#assign_to").autocomplete(duser, {
  formatItem: function(item) {
    return item.text;
  },
	matchContains: true
}).result(function(event, item) {
  //document.getElementById('t_list_hidden').value=item.id;
});
			 $.each(data.datas,function(index,value){
				dat.push({text : value.task_list.name,id : value.task_list.id})
			 });
				// document.getElementById('attachment_'+file).style.display="none";
	//			data.datas.each do |tlist| %> {text:data.datas[i].name, id:'data.datas[i].id'},{text:'',id:''}];
			$("#t_list").autocomplete(dat, {
  formatItem: function(items) {
    return items.text;
  },
	matchContains: true
}).result(function(event, items) {
  document.getElementById('t_list_hidden').value=items.id;
});
			 }
			 });
			 }
			 else
			 {
			 alert("Please select project name first");
			 dat=[];
			 duser=[];
			 $("#assign_to").autocomplete(duser, {
  formatItem: function(item) {
    return item.text;
  },
	matchContains: true
}).result(function(event, item) {
  //document.getElementById('t_list_hidden').value=item.id;
});
			 $("#t_list").autocomplete(dat, {
  formatItem: function(items) {
    return items.text;
  },
	matchContains: true
}).result(function(event, items) {
  document.getElementById('t_list_hidden').value=items.id;
});
			 }
			 <%end%>
					  });
						
// <!-- <![CDATA[

// Project: Dynamic Date Selector (DtTvB) - 2006-03-16
// Script featured on JavaScript Kit- http://www.javascriptkit.com
// Code begin...
// Set the initial date.
var ds_i_date = new Date();
ds_c_month = ds_i_date.getMonth() + 1;
ds_c_year = ds_i_date.getFullYear();

// Get Element By Id
function ds_getel(id) {
	return document.getElementById(id);
}

// Get the left and the top of the element.
function ds_getleft(el) {
	var tmp = el.offsetLeft;
	el = el.offsetParent
	while(el) {
		tmp += el.offsetLeft;
		el = el.offsetParent;
	}
	return tmp;
}
function ds_gettop(el) {
	var tmp = el.offsetTop;
	el = el.offsetParent
	while(el) {
		tmp += el.offsetTop;
		el = el.offsetParent;
	}
	return tmp;
}

// Output Element
var ds_oe = ds_getel('ds_calclass');
// Container
var ds_ce = ds_getel('ds_conclass');

// Output Buffering
var ds_ob = '';
function ds_ob_clean() {
	ds_ob = '';
}
function ds_ob_flush() {
	ds_oe.innerHTML = ds_ob;
	ds_ob_clean();
}
function ds_echo(t) {
	ds_ob += t;
}

var ds_element; // Text Element...

var ds_monthnames = [
'January', 'February', 'March', 'April', 'May', 'June',
'July', 'August', 'September', 'October', 'November', 'December'
]; // You can translate it for your language.

var ds_daynames = [
'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'
]; // You can translate it for your language.

// Calendar template
function ds_template_main_above(t) {
	return '<table cellpadding="3" cellspacing="1" class="ds_tbl">'
	     + '<tr>'
		 + '<td class="ds_head" style="cursor: pointer" onclick="ds_py();">&lt;&lt;</td>'
		 + '<td class="ds_head" style="cursor: pointer" onclick="ds_pm();">&lt;</td>'
		 + '<td class="ds_head" style="cursor: pointer" onclick="ds_hi();" colspan="3">[Close]</td>'
		 + '<td class="ds_head" style="cursor: pointer" onclick="ds_nm();">&gt;</td>'
		 + '<td class="ds_head" style="cursor: pointer" onclick="ds_ny();">&gt;&gt;</td>'
		 + '</tr>'
	     + '<tr>'
		 + '<td colspan="7" class="ds_head">' + t + '</td>'
		 + '</tr>'
		 + '<tr>';
}

function ds_template_day_row(t) {
	return '<td class="ds_subhead">' + t + '</td>';
	// Define width in CSS, XHTML 1.0 Strict doesn't have width property for it.
}

function ds_template_new_week() {
	return '</tr><tr>';
}

function ds_template_blank_cell(colspan) {
	return '<td colspan="' + colspan + '"></td>'
}

function ds_template_day(d, m, y) {
	return '<td class="ds_cell" onclick="ds_onclick(' + d + ',' + m + ',' + y + ')">' + d + '</td>';
	// Define width the day row.
}

function ds_template_main_below() {
	return '</tr>'
	     + '</table>';
}

// This one draws calendar...
function ds_draw_calendar(m, y) {
	// First clean the output buffer.
	ds_ob_clean();
	// Here we go, do the header
	ds_echo (ds_template_main_above(ds_monthnames[m - 1] + ' ' + y));
	for (i = 0; i < 7; i ++) {
		ds_echo (ds_template_day_row(ds_daynames[i]));
	}
	// Make a date object.
	var ds_dc_date = new Date();
	ds_dc_date.setMonth(m - 1);
	ds_dc_date.setFullYear(y);
	ds_dc_date.setDate(1);
	if (m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) {
		days = 31;
	} else if (m == 4 || m == 6 || m == 9 || m == 11) {
		days = 30;
	} else {
		days = (y % 4 == 0) ? 29 : 28;
	}
	var first_day = ds_dc_date.getDay();
	var first_loop = 1;
	// Start the first week
	ds_echo (ds_template_new_week());
	// If sunday is not the first day of the month, make a blank cell...
	if (first_day != 0) {
		ds_echo (ds_template_blank_cell(first_day));
	}
	var j = first_day;
	for (i = 0; i < days; i ++) {
		// Today is sunday, make a new week.
		// If this sunday is the first day of the month,
		// we've made a new row for you already.
		if (j == 0 && !first_loop) {
			// New week!!
			ds_echo (ds_template_new_week());
		}
		// Make a row of that day!
		ds_echo (ds_template_day(i + 1, m, y));
		// This is not first loop anymore...
		first_loop = 0;
		// What is the next day?
		j ++;
		j %= 7;
	}
	// Do the footer
	ds_echo (ds_template_main_below());
	// And let's display..
	ds_ob_flush();
	// Scroll it into view.
	ds_ce.scrollIntoView();
}

// A function to show the calendar.
// When user click on the date, it will set the content of t.
function ds_sh(t) {
	// Set the element to set...
	ds_element = t;
	// Make a new date, and set the current month and year.
	var ds_sh_date = new Date();
	ds_c_month = ds_sh_date.getMonth() + 1;
	ds_c_year = ds_sh_date.getFullYear();
	// Draw the calendar
	ds_draw_calendar(ds_c_month, ds_c_year);
	// To change the position properly, we must show it first.
	ds_ce.style.display = '';
	// Move the calendar container!
	the_left = ds_getleft(t);
	the_top = ds_gettop(t) + t.offsetHeight;
	ds_ce.style.left = the_left + 'px';
	ds_ce.style.top = the_top + 'px';
	// Scroll it into view.
	ds_ce.scrollIntoView();
	
}

// Hide the calendar.
function ds_hi() {
	ds_ce.style.display = 'none';
}

// Moves to the next month...
function ds_nm() {
	// Increase the current month.
	ds_c_month ++;
	// We have passed December, let's go to the next year.
	// Increase the current year, and set the current month to January.
	if (ds_c_month > 12) {
		ds_c_month = 1;
		ds_c_year++;
	}
	// Redraw the calendar.
	ds_draw_calendar(ds_c_month, ds_c_year);
}

// Moves to the previous month...
function ds_pm() {
	ds_c_month = ds_c_month - 1; // Can't use dash-dash here, it will make the page invalid.
	// We have passed January, let's go back to the previous year.
	// Decrease the current year, and set the current month to December.
	if (ds_c_month < 1) {
		ds_c_month = 12;
		ds_c_year = ds_c_year - 1; // Can't use dash-dash here, it will make the page invalid.
	}
	// Redraw the calendar.
	ds_draw_calendar(ds_c_month, ds_c_year);
}

// Moves to the next year...
function ds_ny() {
	// Increase the current year.
	ds_c_year++;
	// Redraw the calendar.
	ds_draw_calendar(ds_c_month, ds_c_year);
}

// Moves to the previous year...
function ds_py() {
	// Decrease the current year.
	ds_c_year = ds_c_year - 1; // Can't use dash-dash here, it will make the page invalid.
	// Redraw the calendar.
	ds_draw_calendar(ds_c_month, ds_c_year);
}

// Format the date to output.
function ds_format_date(d, m, y) {
	// 2 digits month.
	m2 = '00' + m;
	m2 = m2.substr(m2.length - 2);
	// 2 digits day.
	d2 = '00' + d;
	d2 = d2.substr(d2.length - 2);
	// YYYY-MM-DD
	return m2 + '-' + d2 + '-' + y;
}

// When the user clicks the day.
function ds_onclick(d, m, y) {
	// Hide the calendar.
	ds_hi();
	// Set the value of it, if we can.
	if (typeof(ds_element.value) != 'undefined') {
	
	//	ds_element.value = ds_format_date(d, m, y);
	//	document.getElementById('txtInput3').value=ds_element.value;
	// Maybe we want to set the HTML in it.
	} else if (typeof(ds_element.innerHTML) != 'undefined') {
	
	//	ds_element.innerHTML = ds_format_date(d, m, y);
	//	document.getElementById('txtInput3').value=ds_element.value;
	// I don't know how should we display it, just alert it to user.
	} else {
	
		alert (ds_format_date(d, m, y));
	}
	document.getElementById('txtInput3').value=ds_format_date(d, m, y);
	//$('#txtInput3').html(ds_format_date(d, m, y));
	//document.getElementById('date_hidden').value=ds_format_date(d, m, y);
	
}

// And here is the end.
/*$('#assign_to').keydown(function(event){
	if (event.keyCode == 9) {
c=userEmails.indexOf(document.getElementById('assign_to').value)
if(c<0)
{
alert("Please select from autolist only");
$('#assign_to').val('');
$('#assign_to').focus();
}
}
});*/

</script>